[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea4.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea4.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 65.413ms
[debug]       Load.loadUnit: defsScala took 0.1895ms
[debug] [Loading] Scanning directory C:\Users\luis3\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.5762 ms
[debug]           Load.resolveProject(global-plugins) took 27.2909ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\luis3\.sbt\1.0\plugins, plugins: List(<none>))) took 51.1591ms
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 66.5749ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1571ms
[debug]     Load.loadUnit(file:/C:/Users/luis3/.sbt/1.0/plugins/, ...) took 138.3093ms
[debug]   Load.apply: load took 245.1265ms
[debug]   Load.apply: resolveProjects took 3.8343ms
[debug]   Load.apply: finalTransforms took 36.9402ms
[debug]   Load.apply: config.delegates took 5.5231ms
[debug]   Load.apply: Def.make(settings)... took 244.8909ms
[debug]   Load.apply: structureIndex took 65.3754ms
[debug]   Load.apply: mkStreams took 1.1272ms
[info] loading global plugins from C:\Users\luis3\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1535.6083ms
[debug]           Load.loadUnit: plugins took 22.712ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug]             Load.loadUnit: mkEval took 3.7584ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2504 ms
[info] loading settings for project dott_exercise-build from idea4.sbt ...
[debug]               Load.resolveProject(dott_exercise-build) took 1.7043ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dott_exercise-build, base: C:\Users\luis3\IdeaProjects\dott_exercise\project, plugins: List(<none>))) took 3.2921ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: (dott_exercise-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 86.767ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4571ms
[debug]         Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/project/, ...) took 114.7434ms
[debug]       Load.apply: load took 115.9922ms
[debug]       Load.apply: resolveProjects took 0.0775ms
[debug]       Load.apply: finalTransforms took 6.8748ms
[debug]       Load.apply: config.delegates took 0.2824ms
[debug]       Load.apply: Def.make(settings)... took 57.993ms
[debug]       Load.apply: structureIndex took 21.3115ms
[debug]       Load.apply: mkStreams took 0.0015ms
[info] loading project definition from C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 400.2243ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise
[debug]       Load.loadUnit: mkEval took 0.2702ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9645 ms
[info] loading settings for project dott_exercise from build.sbt ...
[debug]         Load.resolveProject(dott_exercise) took 21.1947ms
[debug]       Load.loadTransitive: finalizeProject(Project(id dott_exercise, base: C:\Users\luis3\IdeaProjects\dott_exercise, plugins: List(<none>))) took 24.0733ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: (dott_exercise)
[debug]     Load.loadUnit: loadedProjectsRaw took 66.6146ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.6426ms
[debug]   Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/, ...) took 479.1748ms
[debug] Load.apply: load took 480.8168ms
[debug] Load.apply: resolveProjects took 0.1145ms
[debug] Load.apply: finalTransforms took 18.6951ms
[debug] Load.apply: config.delegates took 0.278ms
[debug] Load.apply: Def.make(settings)... took 48.8773ms
[debug] Load.apply: structureIndex took 21.2578ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62048 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62048, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(idea-shell, None, None)

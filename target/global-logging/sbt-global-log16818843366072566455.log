[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 63.3583ms
[debug]       Load.loadUnit: defsScala took 0.2066ms
[debug] [Loading] Scanning directory C:\Users\luis3\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.5156 ms
[debug]           Load.resolveProject(global-plugins) took 34.0737ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\luis3\.sbt\1.0\plugins, plugins: List(<none>))) took 65.7634ms
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 82.0056ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.176ms
[debug]     Load.loadUnit(file:/C:/Users/luis3/.sbt/1.0/plugins/, ...) took 152.3116ms
[debug]   Load.apply: load took 276.027ms
[debug]   Load.apply: resolveProjects took 4.8747ms
[debug]   Load.apply: finalTransforms took 42.6795ms
[debug]   Load.apply: config.delegates took 4.9812ms
[debug]   Load.apply: Def.make(settings)... took 268.2464ms
[debug]   Load.apply: structureIndex took 66.8602ms
[debug]   Load.apply: mkStreams took 1.4301ms
[info] loading global plugins from C:\Users\luis3\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3233.8777ms
[debug]           Load.loadUnit: plugins took 24.0622ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug]             Load.loadUnit: mkEval took 4.5183ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9688 ms
[info] loading settings for project dott_exercise-build from idea.sbt ...
[debug]               Load.resolveProject(dott_exercise-build) took 1.8966ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dott_exercise-build, base: C:\Users\luis3\IdeaProjects\dott_exercise\project, plugins: List(<none>))) took 3.1688ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: (dott_exercise-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1529.9763ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6968ms
[debug]         Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/project/, ...) took 1559.6804ms
[debug]       Load.apply: load took 1560.9452ms
[debug]       Load.apply: resolveProjects took 0.0873ms
[debug]       Load.apply: finalTransforms took 8.3547ms
[debug]       Load.apply: config.delegates took 0.2835ms
[debug]       Load.apply: Def.make(settings)... took 62.4646ms
[debug]       Load.apply: structureIndex took 22.7168ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3220.1222ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise
[debug]       Load.loadUnit: mkEval took 0.2728ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3213 ms
[info] loading settings for project dott_exercise from build.sbt ...
[debug]         Load.resolveProject(dott_exercise) took 19.1409ms
[debug]       Load.loadTransitive: finalizeProject(Project(id dott_exercise, base: C:\Users\luis3\IdeaProjects\dott_exercise, plugins: List(<none>))) took 21.4079ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: (dott_exercise)
[debug]     Load.loadUnit: loadedProjectsRaw took 600.0387ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.6408ms
[debug]   Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/, ...) took 3837.5127ms
[debug] Load.apply: load took 3839.2185ms
[debug] Load.apply: resolveProjects took 0.1295ms
[debug] Load.apply: finalTransforms took 21.3005ms
[debug] Load.apply: config.delegates took 0.2794ms
[debug] Load.apply: Def.make(settings)... took 55.7252ms
[debug] Load.apply: structureIndex took 21.0368ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63896 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63896, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(idea-shell, None, None)

[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\luis3\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 71.4758ms
[debug]       Load.loadUnit: defsScala took 0.2449ms
[debug] [Loading] Scanning directory C:\Users\luis3\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.8385 ms
[debug]           Load.resolveProject(global-plugins) took 32.0527ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\luis3\.sbt\1.0\plugins, plugins: List(<none>))) took 59.1686ms
[debug] [Loading] Done in C:\Users\luis3\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 78.6419ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1826ms
[debug]     Load.loadUnit(file:/C:/Users/luis3/.sbt/1.0/plugins/, ...) took 157.313ms
[debug]   Load.apply: load took 286.8755ms
[debug]   Load.apply: resolveProjects took 3.8595ms
[debug]   Load.apply: finalTransforms took 40.5679ms
[debug]   Load.apply: config.delegates took 5.0705ms
[debug]   Load.apply: Def.make(settings)... took 273.2573ms
[debug]   Load.apply: structureIndex took 77.4879ms
[debug]   Load.apply: mkStreams took 1.0786ms
[info] loading global plugins from C:\Users\luis3\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1765.6997ms
[debug]           Load.loadUnit: plugins took 25.9605ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug]             Load.loadUnit: mkEval took 5.1547ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2718 ms
[info] loading settings for project dott_exercise-build from idea.sbt ...
[debug]               Load.resolveProject(dott_exercise-build) took 5.57ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dott_exercise-build, base: C:\Users\luis3\IdeaProjects\dott_exercise\project, plugins: List(<none>))) took 7.2449ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise\project, returning: (dott_exercise-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 97.6281ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4411ms
[debug]         Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/project/, ...) took 128.8237ms
[debug]       Load.apply: load took 129.9126ms
[debug]       Load.apply: resolveProjects took 0.0887ms
[debug]       Load.apply: finalTransforms took 7.0622ms
[debug]       Load.apply: config.delegates took 1.6709ms
[debug]       Load.apply: Def.make(settings)... took 56.7163ms
[debug]       Load.apply: structureIndex took 19.2424ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Users\luis3\IdeaProjects\dott_exercise\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1596.4294ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\luis3\IdeaProjects\dott_exercise
[debug]       Load.loadUnit: mkEval took 0.3827ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8199 ms
[info] loading settings for project dott_exercise from build.sbt ...
[debug]         Load.resolveProject(dott_exercise) took 22.3264ms
[debug]       Load.loadTransitive: finalizeProject(Project(id dott_exercise, base: C:\Users\luis3\IdeaProjects\dott_exercise, plugins: List(<none>))) took 24.9476ms
[debug] [Loading] Done in C:\Users\luis3\IdeaProjects\dott_exercise, returning: (dott_exercise)
[debug]     Load.loadUnit: loadedProjectsRaw took 1598.1011ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.7992ms
[debug]   Load.loadUnit(file:/C:/Users/luis3/IdeaProjects/dott_exercise/, ...) took 3215.1048ms
[debug] Load.apply: load took 3216.5015ms
[debug] Load.apply: resolveProjects took 0.0788ms
[debug] Load.apply: finalTransforms took 18.092ms
[debug] Load.apply: config.delegates took 0.2662ms
[debug] Load.apply: Def.make(settings)... took 42.5432ms
[debug] Load.apply: structureIndex took 18.4819ms
[debug] Load.apply: mkStreams took 0.0016ms
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62048 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62048, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dott_exercise (in build file:/C:/Users/luis3/IdeaProjects/dott_exercise/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
